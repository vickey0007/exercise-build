{"version":3,"sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/common.service.ts","./src/app/formpage/formpage.component.html","./src/app/formpage/formpage.component.ts","./src/app/app.module.ts","./src/app/clock/clock.component.ts","./src/app/clock/clock.component.html","./src/app/preptime/preptime.component.ts","./src/app/preptime/preptime.component.html","./src/app/reptime/reptime.component.ts","./src/app/reptime/reptime.component.html","./src/app/intervaltime/intervaltime.component.ts","./src/app/intervaltime/intervaltime.component.html","./src/app/exerciseinterval/exerciseinterval.component.ts","./src/app/exerciseinterval/exerciseinterval.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["title","AppComponent","quotes","formData","exerciseCounter","repsCounter","CommonService","fb","common","router","quote","counter","noExcersisesE","show","ngOnInit","this","myForm","group","noExcersises","required","pattern","noReps","timeReps","repInterval","exerIterval","x","setInterval","getQuote","calculateTotal","exerciseNo","get","value","repNo","timeOfEachRep","repInterVal","exerInterVal","total","temp","Math","floor","length","vickey","navigate","onSubmit","form","ngOnDestroy","clearInterval","FormpageComponent","routes","path","component","ClockComponent","running","startTimer","playAudio","audio","Audio","src","load","play","Date","now","timerRef","str","toString","slice","parseInt","stopTimer","PreptimeComponent","startText","ReptimeComponent","IntervaltimeComponent","ExerciseintervalComponent","AppModule","forRoot","bootstrapModule","catch","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'exercise-timer';\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n  quotes = [\"Dont COMPLAIN, Enjoy the PAIN\", \"You earn your BODY\", \"No PAIN, No GAIN\", \"HUSTLE for that MUSCLE\"];\n  formData = {};\n  exerciseCounter = 0;\n  repsCounter = 0;\n  // formData = {\n  //   \"exerIterval\": 60,\n  //   \"repInterval\": 20,\n  //   \"timeReps\": 35,\n  //   \"noExcersises\": 12,\n  //   \"noReps\": 3,\n  // }\n\n  constructor() { }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center start\" fxFill style=\"background-color: black;padding-top: 3em;\">\n    <div class=\"width100\" fxLayout=\"column\">\n        <img src=\"assets/logo.png\" class=\"logo\">\n        <form fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex=\"100\" [formGroup]=\"myForm\"\n            (ngSubmit)=\"onSubmit(myForm)\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"width: 80%;\">\n                <mat-form-field>\n                    <mat-label>Number of Exercises</mat-label>\n                    <input matInput type=\"number\" formControlName=\"noExcersises\" minlength=\"3\" required>\n                    <mat-error>\n                        Please enter a value between 3-45\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"width: 80%;\">\n                <mat-form-field>\n                    <mat-label>Number of Reps</mat-label>\n                    <input matInput type=\"number\" formControlName=\"noReps\" minlength=\"1\" required>\n                    <mat-error>\n                        Please enter a value between 2-45\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"width: 80%;\" required>\n                <mat-form-field>\n                    <mat-label>Time of Each Rep(Sec)</mat-label>\n                    <input matInput type=\"number\" formControlName=\"timeReps\" minlength=\"10\" required>\n                    <mat-error>\n                        Please enter a value between 5-45\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"width: 80%;\">\n                <mat-form-field>\n                    <mat-label>Interval between Reps(Sec)</mat-label>\n                    <input type=\"number\" formControlName=\"repInterval\" matInput minlength=\"5\" required>\n                    <mat-error>\n                        Please enter a value between 5-45\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"width: 80%;\">\n                <mat-form-field>\n                    <mat-label>Interval between Exercises(Sec)</mat-label>\n                    <input type=\"number\" formControlName=\"exerIterval\" matInput minlength=\"3\" required>\n                    <mat-error>\n                        Please enter a value between 5-45\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"width: 80%;\">\n                <span class=\"material-icons\" style=\"color: white; font-size: 3em;\" (click)=\"calculateTotal()\">\n                    alarm\n                </span> <span style=\"color: white;font-size: 1.5em;padding-left: 0.5em;\" *ngIf =\"show\">{{total}} mins</span>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"width: 80%;padding-top: 1em;\">\n                <button mat-raised-button color=\"primary\" style=\"margin-right: 1em;\" type=\"submit\"\n                    [disabled]=\"myForm.invalid\">Let's Go</button>\n                <button mat-raised-button color=\"primary\" (click)='vickey()'>Vickey's</button>\n            </div>\n            <p class=\"quote\">\"{{quote}}\"</p>\n            <small class=\"form-footer\">&copy; Copyright 2020, Chiranjit Nag</small>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { CommonService } from '../common.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-formpage',\n  templateUrl: './formpage.component.html',\n  styleUrls: ['./formpage.component.scss']\n})\nexport class FormpageComponent implements OnInit {\n  quote = 'Dont COMPLAIN, Enjoy the PAIN';\n  counter = 1;\n  x;\n  myForm: FormGroup;\n  noExcersisesE = false;\n  total;\n  show =false;\n  constructor(private fb: FormBuilder, private common: CommonService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.myForm = this.fb.group({\n      noExcersises: ['', [Validators.required, Validators.pattern(/^[3-9]$|^[1-3][0-9]$|^[4][0-5]$/)]],\n      noReps: ['', [Validators.required, Validators.pattern(/^[2-9]$|^[1-3][0-9]$|^[4][0-5]$/)]],\n      timeReps: ['', [Validators.required, Validators.pattern(/^[5-9]$|^[1-3][0-9]$|^[4][0-5]$/)]],\n      repInterval: ['', [Validators.required, Validators.pattern(/^[5-9]$|^[1-3][0-9]$|^[4][0-5]$/)]],\n      exerIterval: ['', [Validators.required, Validators.pattern(/^[5-9]$|^[1-3][0-9]$|^[4][0-5]$/)]]\n    });\n    this.x = setInterval(() => { this.getQuote(); }, 3000);\n  }\n\n  calculateTotal() {\n    let exerciseNo = this.myForm.get('noExcersises').value;\n    let repNo = this.myForm.get('noReps').value;\n    let timeOfEachRep = this.myForm.get('timeReps').value;\n    let repInterVal = this.myForm.get('repInterval').value;\n    let exerInterVal = this.myForm.get('exerIterval').value\n\n    this.total = 0;\n    this.total = (exerciseNo * repNo * timeOfEachRep) + (repInterVal * exerciseNo * (repNo - 1)) + (exerInterVal * exerciseNo)\n    let temp = Math.floor(this.total / 60);\n    this.total = temp;\n    this.show = true;\n  }\n\n  getQuote() {\n    if (this.counter == this.common.quotes.length) {\n      this.counter = 0;\n    }\n    this.quote = this.common.quotes[this.counter];\n    this.counter++;\n  }\n\n  noExcersises() {\n    if (this.myForm.value.noExcersises < 3 || this.myForm.value.noExcersises > 25) {\n      this.noExcersisesE = true;\n    }\n  }\n\n  vickey() {\n    this.common.formData = {\n      \"exerIterval\": 60,\n      \"repInterval\": 30,\n      \"timeReps\": 35,\n      \"noExcersises\": 12,\n      \"noReps\": 3,\n    }\n    this.router.navigate(['/prep']);\n  }\n\n  onSubmit(form: FormGroup) {\n    // let temp = {\n    //   \"exerIterval\": 15,\n    //   \"noExcersises\": 12,\n    //   \"noReps\": 2,\n    //   \"repInterval\": 12,\n    //   \"timeReps\": 10,\n    // }\n    // this.common.formData = temp;\n    this.common.formData = form.value;\n    this.router.navigate(['/prep'])\n  }\n\n  ngOnDestroy() {\n    if (this.x) {\n      clearInterval(this.x);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormpageComponent } from './formpage/formpage.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ClockComponent } from './clock/clock.component';\nimport { PreptimeComponent } from './preptime/preptime.component';\nimport { ReptimeComponent } from './reptime/reptime.component';\nimport { IntervaltimeComponent } from './intervaltime/intervaltime.component';\nimport { ExerciseintervalComponent } from './exerciseinterval/exerciseinterval.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\n\nconst routes = [\n  {\n    path: '',\n    component: FormpageComponent\n  }, {\n    path: 'clock',\n    component: ClockComponent\n  },\n  {\n    path: 'prep',\n    component: PreptimeComponent\n  }, {\n    path: 'rep',\n    component: ReptimeComponent\n  },\n  {\n    path: 'interval',\n    component: IntervaltimeComponent\n  },\n  {\n    path: 'exerciseint',\n    component: ExerciseintervalComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormpageComponent,\n    ClockComponent,\n    PreptimeComponent,\n    ReptimeComponent,\n    IntervaltimeComponent,\n    ExerciseintervalComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),BrowserModule, BrowserAnimationsModule, FlexLayoutModule, MatInputModule, MatButtonModule, ReactiveFormsModule, MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.scss']\n})\nexport class ClockComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill style=\"background-color: white;\">\n    <p style=\"color: black; font-size: 3em;\"> Good Job Son!! </p>\n    <p style=\"color:black; font-size:2em; padding-top: 1em;\">Cya Tomorrow</p>\n    <button routerLink=\"/\" mat-fab color=\"primary\" style=\"position: absolute;bottom: 3em;\">\n        <mat-icon>exit_to_app</mat-icon>\n    </button>\n    <small class=\"footer\" style=\"color: black !important;\">&copy; Copyright 2020, Chiranjit Nag</small>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-preptime',\n  templateUrl: './preptime.component.html',\n  styleUrls: ['./preptime.component.scss']\n})\nexport class PreptimeComponent implements OnInit {\n  counter: number;\n  timerRef;\n  running: boolean = false;\n  constructor(private common: CommonService, private router: Router) { }\n  ngOnInit(): void {\n    this.startTimer()\n    this.playAudio();\n  }\n\n  playAudio() {\n    let audio = new Audio();\n    audio.src = \"assets/ready.wav\";\n    audio.load();\n    audio.play();\n  }\n\n  startTimer() {\n    this.running = !this.running;\n    if (this.running) {\n      const startTime = Date.now() - (this.counter || 0);\n      this.timerRef = setInterval(() => {\n        this.counter = Date.now() - startTime;\n        var str = this.counter.toString();\n        str = str.slice(0, -3);\n        this.counter = parseInt(str) || 0;\n        if (this.counter == 6) {\n          this.stopTimer()\n        }\n      });\n    } else {\n      clearInterval(this.timerRef);\n    }\n  }\n\n  stopTimer() {\n    this.counter = 0;\n    clearInterval(this.timerRef);\n    this.router.navigate(['/rep']);\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.timerRef);\n  }\n\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill style=\"background-color: blue;\">\n    <p class=\"counterText\"> Ready! </p>\n    <p style=\"color: white; font-size: 15em;\">{{ counter}}</p>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"position: absolute;bottom: 3em; width: 80%;\">\n        <button routerLink=\"/\" mat-fab color=\"primary\">\n            <mat-icon>exit_to_app</mat-icon>\n        </button>\n        <button (click)=\"startTimer()\" mat-fab color=\"primary\">\n            <mat-icon>pause</mat-icon>\n        </button>\n    </div>\n    <small class=\"footer\">&copy; Copyright 2020, Chiranjit Nag</small>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { timer } from \"rxjs\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-reptime',\n  templateUrl: './reptime.component.html',\n  styleUrls: ['./reptime.component.scss']\n})\nexport class ReptimeComponent implements OnInit {\n  counter: number;\n  timerRef;\n  startText = 'Start';\n  running: boolean = false;\n\n  constructor(private common: CommonService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.playAudio();\n    this.startTimer()\n  }\n\n  playAudio() {\n    let audio = new Audio();\n    audio.src = \"assets/start.wav\";\n    audio.load();\n    audio.play();\n  }\n\n  startTimer() {\n    this.running = !this.running;\n    if (this.running) {\n      const startTime = Date.now() - (this.counter || 0);\n      this.timerRef = setInterval(() => {\n        this.counter = Date.now() - startTime;\n        var str = this.counter.toString();\n        str = str.slice(0, -3);\n        this.counter = parseInt(str) || 0;\n        if (this.counter == this.common.formData['timeReps']) {\n          this.stopTimer()\n        }\n      });\n    } else {\n      clearInterval(this.timerRef);\n    }\n  }\n\n  stopTimer() {\n    this.counter = 0;\n    clearInterval(this.timerRef);\n    this.common.repsCounter++;\n    if (this.common.repsCounter == this.common.formData['noReps']) {\n      this.common.repsCounter = 0;\n      this.router.navigate(['/exerciseint'])\n    } else {\n      this.router.navigate(['/interval']);\n    }\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.timerRef);\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill style=\"background-color: #a21818;\">\n    <p class=\"counterText\"> Go! </p>\n    <p style=\"color: white; font-size: 15em;\">{{ counter}}</p>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"position: absolute;bottom: 3em; width: 80%;\">\n        <button routerLink=\"/\" mat-fab color=\"primary\">\n            <mat-icon>exit_to_app</mat-icon>\n        </button>\n        <button (click)=\"startTimer()\" mat-fab color=\"primary\">\n            <mat-icon>pause</mat-icon>\n        </button>\n    </div>\n    <small class=\"footer\">&copy; Copyright 2020, Chiranjit Nag</small>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-intervaltime',\n  templateUrl: './intervaltime.component.html',\n  styleUrls: ['./intervaltime.component.scss']\n})\nexport class IntervaltimeComponent implements OnInit {\n  counter: number;\n  timerRef;\n  startText = 'Start';\n  running: boolean = false;\n\n  constructor(private common: CommonService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.playAudio();\n    this.startTimer()\n  }\n\n  playAudio() {\n    let audio = new Audio();\n    audio.src = \"assets/stop.wav\";\n    audio.load();\n    audio.play();\n  }\n\n  startTimer() {\n    this.running = !this.running;\n    if (this.running) {\n      const startTime = Date.now() - (this.counter || 0);\n      this.timerRef = setInterval(() => {\n        this.counter = Date.now() - startTime;\n        var str = this.counter.toString();\n        str = str.slice(0, -3);\n        this.counter = parseInt(str) || 0;\n        if (this.counter == this.common.formData['repInterval']) {\n          this.stopTimer()\n        }\n      });\n    } else {\n      clearInterval(this.timerRef);\n    }\n  }\n  stopTimer() {\n    this.counter = 0;\n    clearInterval(this.timerRef);\n    this.router.navigate(['/rep']);\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.timerRef);\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill style=\"background-color: green;\">\n    <p class=\"counterText\"> Rest! </p>\n    <p style=\"color: white; font-size: 15em;\">{{ counter}}</p>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"position: absolute;bottom: 3em; width: 80%;\">\n        <button routerLink=\"/\" mat-fab color=\"primary\">\n            <mat-icon>exit_to_app</mat-icon>\n        </button>\n        <button (click)=\"startTimer()\" mat-fab color=\"primary\">\n            <mat-icon>pause</mat-icon>\n        </button>\n    </div>\n    <small class=\"footer\">&copy; Copyright 2020, Chiranjit Nag</small>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-exerciseinterval',\n  templateUrl: './exerciseinterval.component.html',\n  styleUrls: ['./exerciseinterval.component.scss']\n})\nexport class ExerciseintervalComponent implements OnInit {\n  counter: number;\n  timerRef;\n  startText = 'Start';\n  running: boolean = false;\n\n  constructor(private common: CommonService, private router: Router) { }\n  ngOnInit(): void {\n    this.playAudio();\n    this.startTimer()\n  }\n\n  playAudio() {\n    let audio = new Audio();\n    audio.src = \"assets/break.wav\";\n    audio.load();\n    audio.play();\n  }\n\n  startTimer() {\n    this.running = !this.running;\n    if (this.running) {\n      const startTime = Date.now() - (this.counter || 0);\n      this.timerRef = setInterval(() => {\n        this.counter = Date.now() - startTime;\n        var str = this.counter.toString();\n        str = str.slice(0, -3);\n        this.counter = parseInt(str) || 0;\n        if (this.counter == this.common.formData['exerIterval']) {\n          this.stopTimer()\n        }\n      });\n    } else {\n      clearInterval(this.timerRef);\n    }\n  }\n\n  stopTimer() {\n    this.counter = 0;\n    clearInterval(this.timerRef);\n    this.common.exerciseCounter++;\n    if (this.common.exerciseCounter == this.common.formData['noExcersises']) {\n      this.common.exerciseCounter = 0;\n      this.router.navigate(['/clock'])\n    } else {\n      this.router.navigate(['/prep']);\n    }\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.timerRef);\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill style=\"background-color: black;\">\n    <p class=\"counterText\"> Exercise Interval </p>\n    <p style=\"color: white; font-size: 15em;\">{{ counter}}</p>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"position: absolute;bottom: 3em; width: 80%;\">\n        <button routerLink=\"/\" mat-fab color=\"primary\">\n            <mat-icon>exit_to_app</mat-icon>\n        </button>\n        <button (click)=\"startTimer()\" mat-fab color=\"primary\">\n            <mat-icon>pause</mat-icon>\n        </button>\n    </div>\n    <small class=\"footer\">&copy; Copyright 2020, Chiranjit Nag</small>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}